environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\appveyor\\run_with_env.cmd"

  matrix:

    # Python 2.7.10 is the latest version and is not pre-installed.

    # - PYTHON: "C:\\Python27.10"
    #   PYTHON_VERSION: "2.7.10"
    #   PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python27.10-x64"
      PYTHON_VERSION: "2.7.10"
      PYTHON_ARCH: "64"

    # Pre-installed Python versions, which Appveyor may upgrade to
    # a later point release.
    # See: http://www.appveyor.com/docs/installed-software#python

    # - PYTHON: "C:\\Python34"
    #   PYTHON_VERSION: "3.4.x" # currently 3.4.3
    #   PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python34-x64"
      PYTHON_VERSION: "3.4.x" # currently 3.4.3
      PYTHON_ARCH: "64"

    # Python versions not pre-installed

    # - PYTHON: "C:\\Python35"
    #   PYTHON_VERSION: "3.5.0"
    #   PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python35-x64"
      PYTHON_VERSION: "3.5.0"
      PYTHON_ARCH: "64"

install:
  - ECHO "Filesystem root:"
  - ps: "ls \"C:/\""

  - ECHO "Installed SDKs:"
  - ps: "ls \"C:/Program Files/Microsoft SDKs/Windows\""

  # Install Python (from the official .msi of http://python.org) and pip when
  # not already installed.
  - ps: if (-not(Test-Path($env:PYTHON))) { & appveyor\install.ps1 }

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date.
  - "pip install --disable-pip-version-check --user --upgrade pip"

  # Install test dependencies
  - "%CMD_IN_ENV% pip install mock==1.3.0 boto boto3 django-storages"

  # Install the build dependencies of the project. If some dependencies contain
  # compiled extensions and are not provided as pre-built wheel packages,
  # pip will build them from source using the MSVC compiler matching the
  # target Python version and architecture
  - "%CMD_IN_ENV% pip install -e ."

build: off

test_script:
  # Run the project tests
  - "%CMD_IN_ENV% python runtests.py"

# debug permissions
on_finish:
  - cmd: icacls C:\projects\collectfast\static_root
  - cmd: icacls C:\projects\collectfast\static_root\*

before_test:
  - cmd: icacls C:\projects\collectfast\static_root /inheritance:r /grant Everyone:F
